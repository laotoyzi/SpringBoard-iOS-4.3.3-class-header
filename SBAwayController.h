/*
 *     Generated by class-dump 3.3.3 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2010 by Steve Nygard.
 */

#import "SBAlert.h"

@class NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString, NSTimeZone, NSTimer, PCPersistentTimer, SBAlertItem, SBApplication, SBAwayModel, SBAwayView, SBSlidingAlertDisplay, SBUIController;

@interface SBAwayController : SBAlert
{
    SBUIController *_uiController;
    SBAwayModel *_model;
    SBAwayView *_awayView;
    NSTimer *_dimTimer;
    unsigned int _isLocked:1;
    unsigned int _isUnlocking:1;
    unsigned int _isDeviceLocked:1;
    unsigned int _isDeviceLockedInitialized:1;
    unsigned int _isDimmed:1;
    unsigned int _isDimming:1;
    unsigned int _orderedOutDimmed:1;
    unsigned int _frontDimmed:1;
    unsigned int _isPermanentlyBlocked:1;
    unsigned int _makingEmergencyCall:1;
    unsigned int _appRequestedPasscodeEntry:1;
    unsigned int _isSyncing:1;
    unsigned int _relockAfterUnlock:1;
    unsigned int _wasLockedOrMakingEmergencyCallBeforeSync:1;
    unsigned int _wasDeviceLockedBeforeSync:1;
    unsigned int _showOverheatUI:1;
    unsigned int _performingAutoUnlock:1;
    unsigned int _springBoardIdleTimerScheduled:1;
    unsigned int _validPhotoCountCheck:1;
    unsigned int _delayUndimForAutoUnlock:1;
    int _unlockType;
    NSDictionary *_nowPlayingInfo;
    SBApplication *_nowPlayingApp;
    NSNumber *_iPodNowPlayingPID;
    BOOL _iPodIsPlaying;
    SBSlidingAlertDisplay *_deviceUnlockDisplay;
    double _deviceLockBlockTime;
    double _lastLockWallTime;
    NSTimeZone *_lastLockTimeZone;
    double _lastLockSecondsSinceBoot;
    PCPersistentTimer *_deviceLockTimer;
    BOOL _devicePasscodeLoaded;
    NSString *_devicePasscode;
    BOOL _chargingViewHasFadedOut;
    NSMutableArray *_pendingAlertItems;
    SBAlertItem *_currentAlertItem;
    NSMutableDictionary *_awayViewPluginControllers;
    NSString *_alwaysFullscreenAwayPluginName;
    NSMutableArray *_lockScreenBundlesToDisableAfterUnlock;
    PCPersistentTimer *_smsSoundWakeTimers[10];
    int _gracePeriodWhenLocked;
    int _numberOfSMSReminderAlerts;
}

+ (id)sharedAwayController;
+ (id)sharedAwayControllerIfExists;
+ (void)registerForAlerts;
- (BOOL)_isAlertCountValid:(int)arg1;
- (void)_numberOfSMSReminderAlertsChanged;
- (int)numberOfSMSReminderAlerts;
@property(readonly) NSDate *lastLockDate;
- (id)initWithUIController:(id)arg1;
@property(nonatomic) BOOL chargingViewHasFadedOut; // @synthesize chargingViewHasFadedOut=_chargingViewHasFadedOut;
- (id)awayModel;
- (struct CGRect)alertWindowRect;
- (BOOL)showsSpringBoardStatusBar;
- (float)finalAlpha;
- (BOOL)undimsDisplay;
- (id)awayView;
- (id)alertDisplayViewWithSize:(struct CGSize)arg1;
- (void)alertDisplayWillBecomeVisible;
- (void)_releaseAwayView;
- (void)reactivatePendingAlertItems;
- (void)playLockSound;
- (void)_sendLockStateChangedNotification;
- (BOOL)showOverheatUI;
- (void)setShowOverheatUI:(BOOL)arg1;
- (void)_pendAlertItem:(id)arg1;
- (void)lock;
- (id)pendingAlertItems;
- (void)_unlockWithSound:(BOOL)arg1 isAutoUnlock:(BOOL)arg2 unlockType:(int)arg3;
- (void)_unlockWithSound:(BOOL)arg1 isAutoUnlock:(BOOL)arg2;
- (void)screensaverDidFadeToBlack:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)unlockWithSound:(BOOL)arg1 alertDisplay:(id)arg2 isAutoUnlock:(BOOL)arg3 unlockType:(int)arg4;
- (void)unlockWithSound:(BOOL)arg1 alertDisplay:(id)arg2;
- (void)unlockWithSound:(BOOL)arg1 isAutoUnlock:(BOOL)arg2 unlockType:(int)arg3;
- (void)unlockWithSound:(BOOL)arg1 isAutoUnlock:(BOOL)arg2;
- (void)unlockWithSound:(BOOL)arg1;
- (BOOL)isPasswordProtected;
- (void)activationChanged:(id)arg1;
- (BOOL)isDeviceLockedOrBlocked;
- (void)setDeviceLocked:(BOOL)arg1;
- (int)_getGracePeriod;
- (void)_markLockTime;
- (BOOL)_shouldLockDeviceWithCurrentGracePeriod:(int)arg1;
- (void)_updateDeviceLockedState;
- (void)clearDeviceLockedTimer;
- (void)applicationRequestedDeviceUnlock;
- (void)cancelApplicationRequestedDeviceLockEntry;
- (void)_clearBlockedState;
- (BOOL)isBlocked;
- (BOOL)isPermanentlyBlocked:(double *)arg1;
- (void)noteSyncStateChanged;
- (BOOL)isSyncing;
- (BOOL)allowsIdleDimming;
- (double)idleDimDuration;
- (void)noteSpringBoardIdleTimerScheduled:(BOOL)arg1;
- (void)noteResetRestoreStateChanged;
- (BOOL)isLocked;
- (BOOL)shouldShowLockStatusBarTime;
- (void)_photoLibraryChanged;
- (BOOL)deviceHasPhotos;
- (BOOL)hasPhotosDevicesAttached;
- (BOOL)shouldShowSlideshowButton;
- (void)lockBarStartedTracking:(id)arg1;
- (void)lockBarStoppedTracking:(id)arg1;
- (void)resetAwayItemsAndMark:(BOOL)arg1;
- (void)frontLockedAnimationFinished;
- (BOOL)shouldAnimateOtherDisplaysSuspension;
- (BOOL)shouldAnimateOtherDisplaysResumption;
- (void)printLockLog;
- (void)frontLocked:(BOOL)arg1 withAnimation:(int)arg2 automatically:(BOOL)arg3 disableLockSound:(BOOL)arg4;
- (void)frontLocked:(BOOL)arg1 animate:(BOOL)arg2 automatically:(BOOL)arg3;
- (void)attemptUnlockWithUnlockType:(int)arg1;
- (void)attemptUnlock;
- (BOOL)isAttemptingUnlock;
- (void)_finishedUnlockAttemptWithStatus:(BOOL)arg1;
- (BOOL)attemptDeviceUnlockWithPassword:(id)arg1 alertDisplay:(id)arg2;
- (void)cancelDimTimer;
- (void)restartDimTimer:(float)arg1;
- (id)dimTimer;
- (BOOL)isDimmed;
- (void)finishedDimmingScreen;
- (BOOL)moveAlertItemToAwayView:(id)arg1;
- (void)cleansePendingQueueOfAwayItems;
- (void)smsMessageReceived;
- (void)cancelScheduledSMSSounds;
- (void)_smsSoundWakeTimerFired:(id)arg1;
- (void)notePasscodeGracePeriodMayHaveChanged;
- (void)dimTimerFired;
- (void)relockForButtonPress:(BOOL)arg1 afterCall:(BOOL)arg2;
- (void)relockForButtonPress:(BOOL)arg1 afterCall:(BOOL)arg2 dimmed:(BOOL)arg3;
- (void)allowIdleSleep;
- (void)preventIdleSleep;
- (void)preventIdleSleepForNumberOfSeconds:(float)arg1;
- (void)dimScreen:(BOOL)arg1;
- (int)interfaceOrientationForActivation;
- (void)_undimScreen;
- (void)undimScreen;
- (void)userEventOccurred;
- (BOOL)handleKeyEvent:(struct __GSEvent *)arg1;
- (void)activate;
- (BOOL)delayUndimmingForAutoUnlock;
- (void)tearDownAlertWindow:(id)arg1;
- (void)deactivate;
- (BOOL)allowsStackingOfAlert:(id)arg1;
- (int)effectiveStatusBarStyle;
- (int)statusBarStyle;
- (int)statusBarStyleOverridesToCancel;
- (void)orderOut;
- (void)didFinishAnimatingOut;
- (void)updateNowPlayingInfo:(id)arg1 app:(id)arg2;
- (void)updateiPodNowPlayingInfo:(id)arg1;
- (void)updateiPodPlaybackState:(id)arg1;
- (void)updateAwayViewNowPlayingInfo;
- (void)_fetchiPodNowPlayingInfo:(id)arg1;
- (void)_handleFetchediPodNowPlayingInfo:(id)arg1;
- (void)_nowPlayingAppChanged:(id)arg1;
- (void)_nowPlayingStateChanged:(id)arg1;
- (void)_iapExtendedModeChanged:(id)arg1;
- (void)handleRequestedAlbumArt:(id)arg1;
- (void)updateClockFormat;
- (void)makeEmergencyCall;
- (void)emergencyCallWasDisplayed;
- (void)emergencyCallWasRemoved;
- (BOOL)isMakingEmergencyCall;
- (void)didAnimateLockKeypadIn;
- (void)didAnimateLockKeypadOut;
- (id)currentAlertItem;
- (void)pendOrDeactivateCurrentAlertItem;
- (BOOL)activateAlertItem:(id)arg1;
- (BOOL)wantsToHandleAlert:(id)arg1;
- (void)deactivateAlertItem:(id)arg1;
- (void)updateInCallUI;
- (void)_batteryStatusChanged;
- (float)mediaControlHeightDelta;
- (BOOL)isShowingMediaControls;
- (void)hideMediaControls;
- (BOOL)toggleMediaControls;
- (void)toggleShowsIMEIandICCID:(id)arg1;
- (BOOL)isAwayPluginViewVisible;
- (id)highestPriorityAwayPluginController;
- (id)activeAwayPluginController;
- (id)interfaceControllingAwayPluginController;
- (id)nameOfPluginController:(id)arg1;
- (void)enableLockScreenBundleWithName:(id)arg1;
- (void)disableLockScreenBundleWithName:(id)arg1;
- (void)pluginVisiblityStateChanged:(id)arg1;
- (void)_disablePluginControllersForLock;
- (void)_disablePluginControllersForUnlock;
- (void)_awayViewFinishedAnimatingOut:(id)arg1;
- (void)disablePluginContainerNotification:(id)arg1;
- (void)pluginFullscreenNotification:(id)arg1;
- (BOOL)awayPluginControllerShouldAnimateOthersResumption;
- (BOOL)handleMenuButtonTap;
- (BOOL)handleMenuButtonDoubleTap;
- (BOOL)handleMenuButtonHeld;
- (void)hardwareKeyboardAvailabilityChanged;
- (BOOL)handleSlideshowHardwareButton;
- (void)setAlwaysFullscreenAwayPluginName:(id)arg1;
- (BOOL)isAlwaysFullscreenAwayPluginEnabled;
- (void)enableAlwaysFullscreenAwayPlugin;
- (void)unlockAlwaysFullscreenAwayView;
- (void)updateInterfaceIfNecessary;

@end

